% Generate four graphs for MultiplierP data
% Note: the second argument 'bitwidth' is just four graph titles and output
% filename
function plots(filename, bitwidth)

    fid = fopen(filename);
    data = {};
    headers = {};
    
    % read the headers
    textline = fgetl(fid);
    firstline = textscan(textline, '%s', 'delimiter', ',');
    headers = firstline{1};
    
    
    % parse the headers to generate the format to read data
    format = [];
    for i = 1:length(headers)
        header = headers{i};
        idx_cost = strfind(header, 'COST');
        idx_perf = strfind(header, 'PERF');
        if ( isempty(idx_cost) & isempty(idx_perf)) % this is not a COST or PERF entry
            format = [format, '%s ']; % treat as a string type data
        else
            format = [format, '%f ']; % else treat as double type
        end
    end
        
    % read data
    data = textscan(fid, format, 'delimiter', ',', 'BufSize', 1000000000);
    fclose(fid);    
      
    % extract data from cell array C
    BoothType = data{strmatch('top_MultiplierP.MultiplierP.BoothType', headers)};
    TreeType = data{strmatch('top_MultiplierP.MultiplierP.TreeType', headers)};
    Designware = data{strmatch('top_MultiplierP.MultiplierP.Designware_MODE', headers)};
    Vth = data{strmatch('TOP_VT', headers)};
    Vdd = data{strmatch('TOP_Voltage', headers)};
    
    COST_Mapped_Clk_Period_nS = data{strmatch('COST_Mapped_Clk_Period_nS', headers)};
    COST_Mapped_Avg_Dyn_Energy_pJ = data{strmatch('COST_Mapped_Avg_Dyn_Energy_pJ', headers)};
    
    COST_Optimized_Clk_Period_nS = data{strmatch('COST_Optimized_Clk_Period_nS', headers)};
    COST_Optimized_Avg_Dyn_Energy_pJ = data{strmatch('COST_Optimized_Avg_Dyn_Energy_pJ', headers)};
    
    COST_Routed_Clk_Period_nS = data{strmatch('COST_Routed_Clk_Period_nS', headers)};
    COST_Routed_Avg_Dyn_Energy_pJ = data{strmatch('COST_Routed_Avg_Dyn_Energy_pJ', headers)};
    
    clear data;
      
    % filter data
    ED_data = {COST_Mapped_Clk_Period_nS, COST_Mapped_Avg_Dyn_Energy_pJ, ...
        COST_Routed_Clk_Period_nS, COST_Routed_Avg_Dyn_Energy_pJ, ...
        COST_Optimized_Clk_Period_nS, COST_Optimized_Avg_Dyn_Energy_pJ, ...
        Vth, Vdd, TreeType, BoothType, Designware};
    
    Designware_data = filterCellArray(ED_data, ED_data{11}, 'ON ');
    OurDesign_data = filterCellArray(ED_data, ED_data{11}, 'OFF ');  
    
    OurDesign_Booth = cell(4, 1);
    for i = 1:4
        OurDesign_Booth{i} = filterCellArray(OurDesign_data, OurDesign_data{10}, [num2str(i), ' ']);
    end
    
    Wallace = filterCellArray(OurDesign_data, OurDesign_data{9}, 'Wallace ');
    OS1 = filterCellArray(OurDesign_data, OurDesign_data{9}, 'OS1 ');
    Array = filterCellArray(OurDesign_data, OurDesign_data{9}, 'Array ');
	ZM = filterCellArray(OurDesign_data, OurDesign_data{9}, 'ZM ');
    
    Wallace_Booth = cell(4, 1);
    for i = 1:4
        Wallace_Booth{i} = filterCellArray(Wallace, Wallace{10}, [num2str(i), ' ']);
    end
    
    % filter vt and vdd, just for sanity check
    Designware_lvt_1v0 = filterCellArray(Designware_data, Designware_data{7},'lvt ', Designware_data{8},  '1.0 ');   
    Wallace_lvt_1v0 = filterCellArray(OurDesign_data, OurDesign_data{7},'lvt ', OurDesign_data{8},  '1.0 ', OurDesign_data{9}, 'Wallace ');   
    Wallace_lvt_1v0_Booth = cell(4, 1);
    for i = 1:4
        Wallace_lvt_1v0_Booth{i} = filterCellArray(Wallace_lvt_1v0, Wallace_lvt_1v0{10}, [num2str(i), ' ']);
    end
    
    % get frontier
    for i = 1:2:6
        [Designware_data{i}, Designware_data{i+1}] = getFrontier(Designware_data{i}, Designware_data{i+1});
        [OurDesign_data{i}, OurDesign_data{i+1}] = getFrontier(OurDesign_data{i}, OurDesign_data{i+1});
        [Wallace{i}, Wallace{i+1}] = getFrontier(Wallace{i}, Wallace{i+1});
        [OS1{i}, OS1{i+1}] = getFrontier(OS1{i}, OS1{i+1});
        [Array{i}, Array{i+1}] = getFrontier(Array{i}, Array{i+1});
        [ZM{i}, ZM{i+1}] = getFrontier(ZM{i}, ZM{i+1});
        [Designware_lvt_1v0{i}, Designware_lvt_1v0{i+1}] = getFrontier(Designware_lvt_1v0{i}, Designware_lvt_1v0{i+1});
        [Wallace_lvt_1v0{i}, Wallace_lvt_1v0{i+1}] = getFrontier(Wallace_lvt_1v0{i}, Wallace_lvt_1v0{i+1});
    end
    
    for i = 1:4
        for j = 1:2:6
        [OurDesign_Booth{i}{j},  OurDesign_Booth{i}{j+1}] = getFrontier(OurDesign_Booth{i}{j},  OurDesign_Booth{i}{j+1});
        [Wallace_Booth{i}{j},  Wallace_Booth{i}{j+1}] = getFrontier(Wallace_Booth{i}{j},  Wallace_Booth{i}{j+1});        
        [Wallace_lvt_1v0_Booth{i}{j},  Wallace_lvt_1v0_Booth{i}{j+1}] = getFrontier(Wallace_lvt_1v0_Booth{i}{j},  Wallace_lvt_1v0_Booth{i}{j+1});
        end
    end
    
    
    % plot graphs
    figure(1);
    plot(Designware_data{3}, Designware_data{4},'-k^',...
       Wallace{3}, Wallace{4},'--ro',...
       Wallace{5}, Wallace{6},'-ro',...
       OS1{3}, OS1{4},'--m*',...
       OS1{5}, OS1{6},'-m*',...
       Array{3}, Array{4},'--b^',...
       Array{5}, Array{6},'-b^',...
       ZM{3}, ZM{4},'--c+',...
       ZM{5}, ZM{6},'-c+',...
       'LineWidth',2,'MarkerSize',9);
   set(gca,'fontsize',12);
   title(['Delay vs Energy (MultiplierP ', num2str(bitwidth), 'bit)'],'fontsize',18);
   
   xlabel('Delay / ns','fontsize',18),grid
   ylabel('Dynamic Energy / pJ','fontsize',18)
   legend('DW - uninformed P&R', ...
       'Wallace - uninformed P&R',...
       'Wallace - layout informed P&R',...
       'OS1 - uninformed P&R',...
       'OS1 - layout informed P&R',...
       'Array - uninformed P&R',...
       'Array - layout informed P&R',...
       'ZM - uninformed P&R',...
       'ZM - layout informed P&R',...
        'fontsize',14);
    saveas(gcf, ['MultP_', num2str(bitwidth), '_figure1'], 'pdf');
    
    figure(2);
    plot(Designware_data{3}, Designware_data{4},'-k^',...
       OurDesign_Booth{1}{3}, OurDesign_Booth{1}{4},'--ro',...
       OurDesign_Booth{2}{3}, OurDesign_Booth{2}{4},'--m*',...
       OurDesign_Booth{2}{5}, OurDesign_Booth{2}{6},'-m*',...
       OurDesign_Booth{3}{3}, OurDesign_Booth{3}{4},'--b^',...
       OurDesign_Booth{3}{5}, OurDesign_Booth{3}{6},'-b^',...
       OurDesign_Booth{4}{3}, OurDesign_Booth{4}{4},'--c+',...
       OurDesign_Booth{4}{5}, OurDesign_Booth{4}{6},'-c+',...
       'LineWidth',2,'MarkerSize',9);
   set(gca,'fontsize',12);
   title(['Delay vs Energy (MultiplierP ', num2str(bitwidth), 'bit)'],'fontsize',18);
   
   xlabel('Delay / ns','fontsize',18),grid
   ylabel('Energy / pJ','fontsize',18)
   legend('DW - uninformed P&R', ...
       'Booth 1 - uninformed P&R',...
       'Booth 2 - uninformed P&R',...
       'Booth 2 - layout informed P&R',...
       'Booth 3 - uninformed P&R',...
       'Booth 3 - layout informed P&R',...
       'Booth 4 - uninformed P&R',...
       'Booth 4 - layout informed P&R',...
        'fontsize',14);
    saveas(gcf, ['MultP_', num2str(bitwidth), '_figure2'], 'pdf');
    
    figure(3);
    plot(Designware_data{3}, Designware_data{4},'-k^',...
       Wallace_Booth{1}{3}, Wallace_Booth{1}{4},'--ro',...
       Wallace_Booth{2}{3}, Wallace_Booth{2}{4},'--m*',...
       Wallace_Booth{2}{5}, Wallace_Booth{2}{6},'-m*',...
       Wallace_Booth{3}{3}, Wallace_Booth{3}{4},'--b^',...
       Wallace_Booth{3}{5}, Wallace_Booth{3}{6},'-b^',...
       Wallace_Booth{4}{3}, Wallace_Booth{4}{4},'--c+',...
       Wallace_Booth{4}{5}, Wallace_Booth{4}{6},'-c+',...
       'LineWidth',2,'MarkerSize',9);
   set(gca,'fontsize',12);
   title(['Delay vs Energy (MultiplierP ', num2str(bitwidth), 'bit Wallace)'],'fontsize',18);
   
   xlabel('Delay / ns','fontsize',18),grid
   ylabel('Energy / pJ','fontsize',18)
   legend('DW - uninformed P&R', ...
       'Booth 1 - uninformed P&R',...
       'Booth 2 - uninformed P&R',...
       'Booth 2 - layout informed P&R',...
       'Booth 3 - uninformed P&R',...
       'Booth 3 - layout informed P&R',...
       'Booth 4 - uninformed P&R',...
       'Booth 4 - layout informed P&R',...
        'fontsize',14);
    saveas(gcf, ['MultP_', num2str(bitwidth), '_figure3'], 'pdf');
    
    
    figure(4);
    plot(Designware_lvt_1v0{3}, Designware_lvt_1v0{4},'-k^',...
       Wallace_lvt_1v0_Booth{1}{3}, Wallace_lvt_1v0_Booth{1}{4},'--ro',...
       Wallace_lvt_1v0_Booth{2}{3}, Wallace_lvt_1v0_Booth{2}{4},'--m*',...
       Wallace_lvt_1v0_Booth{2}{5}, Wallace_lvt_1v0_Booth{2}{6},'-m*',...
       Wallace_lvt_1v0_Booth{3}{3}, Wallace_lvt_1v0_Booth{3}{4},'--b^',...
       Wallace_lvt_1v0_Booth{3}{5}, Wallace_lvt_1v0_Booth{3}{6},'-b^',...
       Wallace_lvt_1v0_Booth{4}{3}, Wallace_lvt_1v0_Booth{4}{4},'--c+',...
       Wallace_lvt_1v0_Booth{4}{5}, Wallace_lvt_1v0_Booth{4}{6},'-c+',...
       'LineWidth',2,'MarkerSize',9);
   set(gca,'fontsize',12);
   title(['Delay vs Energy (MultiplierP ', num2str(bitwidth), 'bit lvt 1.0V Wallace)'],'fontsize',18);
   
   xlabel('Delay / ns','fontsize',18),grid
   ylabel('Energy / pJ','fontsize',18)
   legend('DW - uninformed P&R', ...
       'Booth 1 - uninformed P&R',...
       'Booth 2 - uninformed P&R',...
       'Booth 2 - layout informed P&R',...
       'Booth 3 - uninformed P&R',...
       'Booth 3 - layout informed P&R',...
       'Booth 4 - uninformed P&R',...
       'Booth 4 - layout informed P&R',...
        'fontsize',14);
    saveas(gcf, ['MultP_', num2str(bitwidth), '_figure4'], 'pdf');

end
