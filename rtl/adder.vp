/**************************************************************/
/* adder.vp                                                   */
/*    John Brunhaver jbrunhaver@gmail.com                     */
/**************************************************************/

//;# Import Libs
//; use POSIX ();
//;
//  PARAMETERS:
//; my $AdderType = parameter( name=>'AdderType', val=>'Sklansky' ,
//;                            doc=>'Type of Adder' ,
//;                            list=>[ 'Ripple' , 'Sklansky' ] ) ;
//; my $BW  = parameter( name=>'BitWidth', val=>16 , 
//;                      doc=>'!functional! BitWidth of operands' , 
//;                      min=>2 , max=>512, step=>1 );
//;
//; #SYNTH Parameters
//;
//; my $ORIENTATION = parameter( name=>'Orientation', val=>'L',
//;                              doc=>'Orientation of Layout',
//;                              list=>[ 'horizontal' , 'vertical' , 'L' ] );  #, 
//; my $DATADIRECTION = parameter( name=>'Direction', val=>'NW_to_SE',
//;                                doc=>'Orientation of Inputs and Outputs',
//;                                list=>[ 'NW_to_SE' ] ); # 'SE_to_NW' 
//; my $GROUPNAME = parameter( name=>'GroupName', 
//;                            val=>("Adder" . "_" . $BW . "_" . $ORIENTATION . "_" . $DATADIRECTION ),
//;                            doc=>'Orientation of Layout' );
 


//  ... Wrapper for the Various Adder Designs ... //
module `mname()` 
  (
    //Input Signals
    input logic  [ `$BW-1` : 0] a,
    input logic  [ `$BW-1` : 0] b,
    input logic                 ci,

    //Output Signals
    output logic [ `$BW-1` : 0] s ,
    output logic                co 
   );


  // synopsys dc_tcl_script_begin
  // set_ungroup [current_design] true
  // set_flatten true -effort high -phase true -design [current_design]
  // synopsys dc_tcl_script_end 
   
   
//; my $adderInst ;
//; $AdderType eq 'Ripple'   and $adderInst = generate( 'adderRippleCarry'  , 'RippleInst'   , BitWidth=>$BW );
//; $AdderType eq 'Sklansky' and $adderInst = generate( 
//;                                                      'adderSklansky', 
//;                                                      'SklanskyInst' , 
//;                                                      BitWidth=>$BW ,
//;                                                      Orientation=>$ORIENTATION ,
//;                                                      Direction=>$DATADIRECTION ,
//;                                                      GroupName=>$GROUPNAME 
//;                                                   );
   
`$adderInst->instantiate()` (.*); //Ports implied

      
endmodule : `mname` 