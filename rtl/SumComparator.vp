/*************************************************************************
 ** From Perforce:
 **
 ** $Id$
 ** $DateTime$
 ** $Change$
 ** $Author$
 *************************************************************************/

/* *****************************************************************************
 * Description:
 * FIXME Sameh: What is this module doing?
 * Refer to J. Cortadella & J.M. Liaberia "Evaluation of A + B = K Conditions 
 * Without Carry Propagation" IEEE transactions on Computer, November 1992 
 * 
 * 
 * Parameters:
 * * Width
 * 
 * Change bar:
 * -----------
 * Date           Author    Description
 * Oct 13, 2011   shacham   init version - ported Sameh's original code to 
 *                          genesis
 * ****************************************************************************/

/*******************************************************************************
 * PARAMETERIZATION
 * ****************************************************************************/
//; # get some values from the top
//; my $verif_mode = $self->get_top_param('VERIF_MODE'); # Reads this parameter from the top level
//; my $synth_mode = $self->get_top_param('SYNTH_MODE'); # Reads this parameter from the top level
//;
//; # module parameters
//; my $width = parameter(Name=>'Width', Val=>109, Min=>1, Step=>1,
//;                       Doc=>"Width of signals !FUNCTIONAL!");
//; my $eq_lb = parameter(Name=>'EqualityRangeLB', Val=>0, Min=>0, Max=>$width-1,
//;                       Doc=>"Width of signals !FUNCTIONAL!");
//; my $eq_ub = parameter(Name=>'EqualityRangeUB', Val=>$width-1, Min=>0, Max=>$width-1,
//;                       Doc=>"Width of signals !FUNCTIONAL!");


module `mname` (
		input logic [`$width-1`:0] a, b, sum,
		input logic 		   ci,
		output logic 		   equal
		);

//; #  /* synopsys dc_tcl_script_begin
//; #    set_ungroup [current_design] true
//; #    set_flatten true -effort high -phase true -design [current_design]
//; #  */
//; parameter( name=>"Ungroup" , val=>"YES" , list=>["YES","NO"] );
//; parameter( name=>"Flatten" , val=>"YES" , list=>["YES","NO"] );
 
  
   wire [`$width-1`:0] 	 v,w;
   wire 		 dummy_co;

   DW01_csa #(`$width`) CSA ( .a(a),.b(b), .c(~sum), .ci(ci), .carry(v), .sum(w), .co(dummy_co));

   assign equal = & (v[`$eq_ub`:`$eq_lb`]^w[`$eq_ub`:`$eq_lb`]);

endmodule : `mname`

