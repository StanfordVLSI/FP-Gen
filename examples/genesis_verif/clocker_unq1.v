//
//--------------------------------------------------------------------------------
//          THIS FILE WAS AUTOMATICALLY GENERATED BY THE GENESIS2 ENGINE        
//  FOR MORE INFORMATION: OFER SHACHAM (CHIP GENESIS INC / STANFORD VLSI GROUP)
//    !! THIS VERSION OF GENESIS2 IS NOT FOR ANY COMMERCIAL USE !!
//     FOR COMMERCIAL LICENSE CONTACT SHACHAM@ALUMNI.STANFORD.EDU
//--------------------------------------------------------------------------------
//
//  
//	-----------------------------------------------
//	|            Genesis Release Info             |
//	|  $Change: 11904 $ --- $Date: 2013/08/03 $   |
//	-----------------------------------------------
//	
//
//  Source file: /nobackup/steveri/github/FP-Gen/verif/clocker.vp
//  Source template: clocker
//
// --------------- Begin Pre-Generation Parameters Status Report ---------------
//
//	From 'generate' statement (priority=5):
// Parameter CLK_PERIOD 	= 1000
// Parameter RST_PERIOD 	= 20
//
//		---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----
//
//	From Command Line input (priority=4):
//
//		---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----
//
//	From XML input (priority=3):
//
//		---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----
//
//	From Config File input (priority=2):
//
// ---------------- End Pre-Generation Pramameters Status Report ----------------


/*************************************************************************
 ** From Perforce:
 **
 ** $Id: //Smart_design/ChipGen/rtl/Env_rtl/clocker.v#4 $
 ** $DateTime: 2009/12/16 15:43:14 $
 ** $Change: 8291 $
 ** $Author: shacham $
 *************************************************************************/

/* *****************************************************************************
 * File: clocker.v
 * Author: Ofer Shacham
 * 
 * 
 * Change bar:
 * -----------
 * Date          Author   Description
 * Feb 06, 2009  shacham  init version
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * ****************************************************************************/

/*******************************************************************************
 * Simple module to generate clock and reset for local testbenches
 * 
 * 
 * 
 ******************************************************************************/

// CLK_PERIOD (_GENESIS2_INHERITANCE_PRIORITY_) = 0x3e8
//
// RST_PERIOD (_GENESIS2_INHERITANCE_PRIORITY_) = 20
//

module clocker_unq1
   (output logic clk,
    output logic reset);

   int 		 clk_period;
   int 		 clk_half_period;
   
   initial begin
      clk = 1'b0;
      reset <= 1'b0;
      calibrate_clk;
      fork
	 do_clk;
	 do_reset;
      join_none
   end

   // Task to read runtime clock period argument if any
   task calibrate_clk;
      clk_period = 1000;
      clk_half_period = clk_period / 2;
      
      if ( $test$plusargs("clk_period") ) begin
	 $value$plusargs("clk_period=%g",clk_period);
	 clk_half_period = clk_period / 2 ;
      end
      
      if( clk_period < 100 ) begin
	      $display( "ERROR: Clock Period too small, Try again" );
	      $finish(2);
      end else begin
	$display( "Using Clk Period= %d pS", clk_period) ;
      end
   endtask // calibrate_clk

   // task to reverse reset (works for both pos and neg reset logic)
   task do_reset;
      repeat(20) @(posedge clk);
      reset <= ~reset;
   endtask // do_reset
   

   // taks to toggle clk
   task do_clk;
      while(1) begin
	 #clk_half_period;
	 clk = ~clk;
      end
   endtask // do_clk
   
endmodule


