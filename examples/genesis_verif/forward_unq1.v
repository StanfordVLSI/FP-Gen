//
//--------------------------------------------------------------------------------
//          THIS FILE WAS AUTOMATICALLY GENERATED BY THE GENESIS2 ENGINE        
//  FOR MORE INFORMATION: OFER SHACHAM (CHIP GENESIS INC / STANFORD VLSI GROUP)
//    !! THIS VERSION OF GENESIS2 IS NOT FOR ANY COMMERCIAL USE !!
//     FOR COMMERCIAL LICENSE CONTACT SHACHAM@ALUMNI.STANFORD.EDU
//--------------------------------------------------------------------------------
//
//  
//	-----------------------------------------------
//	|            Genesis Release Info             |
//	|  $Change: 11904 $ --- $Date: 2013/08/03 $   |
//	-----------------------------------------------
//	
//
//  Source file: /nobackup/steveri/github/FP-Gen/verif/forward.vp
//  Source template: forward
//
// --------------- Begin Pre-Generation Parameters Status Report ---------------
//
//	From 'generate' statement (priority=5):
// Parameter Width 	= 1
//
//		---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----
//
//	From Command Line input (priority=4):
//
//		---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----
//
//	From XML input (priority=3):
//
//		---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----
//
//	From Config File input (priority=2):
//
// ---------------- End Pre-Generation Pramameters Status Report ----------------

/* *****************************************************************************
 * Description:
 * Random generator for fowarding signals
 * 
 * Parameters:
 * * FractionWidth, ExponentWidth, Architecture
 * 
 *  
 * 
 * 
 * Change bar:
 * -----------
 * Date          Author    Description
 * May 18, 2012  jingpu    init version
 * ****************************************************************************/

/*******************************************************************************
 * PARAMETERIZATION
 * ****************************************************************************/
// Weight (_GENESIS2_DECLARATION_PRIORITY_) = 30
//
// Width (_GENESIS2_INHERITANCE_PRIORITY_) = 1
//



class forward_unq1;
   typedef enum {Zero, OneHot} SignalType;
   rand SignalType forwardType;
   rand int hotbit;
   logic [0:0] forward;


   constraint pick_forward{
      forwardType dist {OneHot := 30, Zero := 70};
   }

   constraint pick_hotbit {
      hotbit>=0 && hotbit<1;
   }

   function void post_randomize;
      forward = 1'b0;
      if(forwardType == OneHot) begin
	 forward[hotbit] = 1'b1;
      end
   endfunction 
   

endclass : forward_unq1
   
