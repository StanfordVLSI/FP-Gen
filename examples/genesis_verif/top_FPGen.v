//
//--------------------------------------------------------------------------------
//          THIS FILE WAS AUTOMATICALLY GENERATED BY THE GENESIS2 ENGINE        
//  FOR MORE INFORMATION: OFER SHACHAM (CHIP GENESIS INC / STANFORD VLSI GROUP)
//    !! THIS VERSION OF GENESIS2 IS NOT FOR ANY COMMERCIAL USE !!
//     FOR COMMERCIAL LICENSE CONTACT SHACHAM@ALUMNI.STANFORD.EDU
//--------------------------------------------------------------------------------
//
//  
//	-----------------------------------------------
//	|            Genesis Release Info             |
//	|  $Change: 11904 $ --- $Date: 2013/08/03 $   |
//	-----------------------------------------------
//	
//
//  Source file: /nobackup/steveri/github/FP-Gen/verif/top_FPGen.vp
//  Source template: top_FPGen
//
// --------------- Begin Pre-Generation Parameters Status Report ---------------
//
//	From 'generate' statement (priority=5):
//
//		---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----
//
//	From Command Line input (priority=4):
//
//		---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----
//
//	From XML input (priority=3):
//
//		---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----
//
//	From Config File input (priority=2):
//
// ---------------- End Pre-Generation Pramameters Status Report ----------------

/* *****************************************************************************
 * Description:
 * Top module for simulation, used for simple FMA module testing. Should not
 * be mistaken as a full fledged verification environment. It's not!
 * 
 * 
 * 
 * Change bar:
 * -----------
 * Date          Author    Description
 * Feb 04, 2012  jingpu    init version - change original top module to FMA verif
 * ****************************************************************************/



/*******************************************************************************
 * PARAMETERIZATION
 * ****************************************************************************/
// VERIF_MODE (_GENESIS2_DECLARATION_PRIORITY_) = OFF
//
// SYNTH_MODE (_GENESIS2_DECLARATION_PRIORITY_) = ON
//

`define DUT(mod) `ifndef GATES  mod  `else  mod``_svsim  `endif 


module top_FPGen ();   



// ##############################################################
// ### Local Signals to Stitch the Bench to the DUT
// ##############################################################
   
// ##### GLOBALS ######
          logic 				     clk; 
          logic 				     reset;
          FPGen_ifc_unq1 FPGen_ifc();

// #######################################################################
// ### A Clock and Reset Generator
// #######################################################################
   clocker_unq1  clocker ( .clk(clk), .reset(reset) );
      
// #######################################################################
// ### Instantiate Floating Point Multiply Add Unit as DEVICE UNDER TEST
// #######################################################################  
   `DUT(FPGen) FPGen ( .clk(clk), .reset(reset), .FPGen_bus(FPGen_ifc.FPU) );



   
// #######################################################################
// ### Begin Verification Framework
// #######################################################################   
   // ------------------------ VERIFICATION HARNES ---------------------------//
   // Instantiate the TestGenerator here:
   TestBench_FPGen_unq1  TestBench ( .clk(clk), .reset(reset), .FPGen_bus(FPGen_ifc.Controller) );
endmodule : top_FPGen


